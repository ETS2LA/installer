name: Build using NSIS
on:
  push:
    branches:
      - main
  workflow_dispatch:
permissions:
  contents: write
jobs:
  build:
    runs-on: windows-2022
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install NSIS
        uses: repolevedavaj/install-nsis@v1.0.3
        with:
          nsis-version: '3.10'

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'

      - name: Precompile Installer Sources
        run: |
          python auto_precompile.py

      - name: Build Installer
        run: |
          makensis main.nsi
        shell: cmd

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ETS2LA-Windows-Installer
          path: ETS2LA-Windows-Installer.exe
          
      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release_commit_${{ github.sha }}
          release_name: Automated Release ${{ github.sha }}
          body: |
            Latest automated release of the **ETS2LA Windows Installer**.
            This installer was built from commit `${{ github.sha }}`.

            - ${{ github.event.head_commit.message }}
            
            Authored by **${{ github.event.head_commit.author.name }}**
            Release date: **${{ github.event.head_commit.timestamp }}**

            ---

            You can download the latest `ETS2LA-Windows-Installer.exe` from the sources below or from the sourceforge download link provided.

            [![Download Euro Truck Simulator 2 Lane Assist](https://a.fsdn.com/con/app/sf-download-button)](https://sourceforge.net/projects/eurotrucksimulator2-laneassist/files/latest/download)
            
          draft: true # Has to be created as a draft release so sourceforge doesn't pick it up yet.
          prerelease: false
          
      - name: Upload Release Asset # Now we upload the exe to the release.
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ETS2LA-Windows-Installer.exe
          asset_name: ETS2LA-Windows-Installer.exe
          asset_content_type: application/octet-stream
          
      - name: Publish Release # And then publish it, at this point sourceforge will pick it up.
        uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}